#9 [4/8] RUN npm ci
#9 3.384 npm warn deprecated node-domexception@1.0.0: Use your platform's native DOMException instead
#9 6.915 
#9 6.915 > @gongrzhe/server-gmail-autoauth-mcp@1.1.9 prepare
#9 6.915 > npm run build
#9 6.915 
#9 7.119 
#9 7.119 > @gongrzhe/server-gmail-autoauth-mcp@1.1.9 build
#9 7.119 > tsc
#9 7.119 
#9 7.365 Version 5.7.2
#9 7.369 tsc: The TypeScript Compiler - Version 5.7.2
#9 7.369 
#9 7.369 COMMON COMMANDS
#9 7.369 
#9 7.369   tsc
#9 7.369   Compiles the current project (tsconfig.json in the working directory.)
#9 7.369 
#9 7.369   tsc app.ts util.ts
#9 7.369   Ignoring tsconfig.json, compiles the specified files with default compiler options.
#9 7.369 
#9 7.369   tsc -b
#9 7.369   Build a composite project in the working directory.
#9 7.369 
#9 7.369   tsc --init
#9 7.369   Creates a tsconfig.json with the recommended settings in the working directory.
#9 7.369 
#9 7.369   tsc -p ./path/to/tsconfig.json
#9 7.369   Compiles the TypeScript project located at the specified path.
#9 7.369 
#9 7.369   tsc --help --all
#9 7.369   An expanded version of this information, showing all possible compiler options
#9 7.369 
#9 7.370   tsc --noEmit
#9 7.370   tsc --target esnext
#9 7.370   Compiles the current project, with additional settings.
#9 7.370 
#9 7.370 COMMAND LINE FLAGS
#9 7.370 
#9 7.370 --help, -h
#9 7.370 Print this message.
#9 7.370 
#9 7.370 --watch, -w
#9 7.370 Watch input files.
#9 7.370 
#9 7.370 --all
#9 7.370 Show all compiler options.
#9 7.370 
#9 7.370 --version, -v
#9 7.370 Print the compiler's version.
#9 7.370 
#9 7.370 --init
#9 7.370 Initializes a TypeScript project and creates a tsconfig.json file.
#9 7.370 
#9 7.370 --project, -p
#9 7.370 Compile the project given the path to its configuration file, or to a folder with a 'tsconfig.json'.
#9 7.370 
#9 7.371 --showConfig
#9 7.371 Print the final configuration instead of building.
#9 7.371 
#9 7.371 --build, -b
#9 7.371 Build one or more projects and their dependencies, if out of date
#9 7.371 
#9 7.371 COMMON COMPILER OPTIONS
#9 7.371 
#9 7.371 --pretty
#9 7.371 Enable color and formatting in TypeScript's output to make compiler errors easier to read.
#9 7.371 type: boolean
#9 7.371 default: true
#9 7.371 
#9 7.371 --declaration, -d
#9 7.371 Generate .d.ts files from TypeScript and JavaScript files in your project.
#9 7.371 type: boolean
#9 7.371 default: `false`, unless `composite` is set
#9 7.371 
#9 7.371 --declarationMap
#9 7.371 Create sourcemaps for d.ts files.
#9 7.371 type: boolean
#9 7.371 default: false
#9 7.371 
#9 7.371 --emitDeclarationOnly
#9 7.371 Only output d.ts files and not JavaScript files.
#9 7.371 type: boolean
#9 7.371 default: false
#9 7.371 
#9 7.371 --sourceMap
#9 7.371 Create source map files for emitted JavaScript files.
#9 7.371 type: boolean
#9 7.371 default: false
#9 7.371 
#9 7.371 --noEmit
#9 7.371 Disable emitting files from a compilation.
#9 7.371 type: boolean
#9 7.371 default: false
#9 7.371 
#9 7.371 --target, -t
#9 7.371 Set the JavaScript language version for emitted JavaScript and include compatible library declarations.
#9 7.371 one of: es5, es6/es2015, es2016, es2017, es2018, es2019, es2020, es2021, es2022, es2023, es2024, esnext
#9 7.371 default: es5
#9 7.371 
#9 7.371 --module, -m
#9 7.371 Specify what module code is generated.
#9 7.371 one of: none, commonjs, amd, umd, system, es6/es2015, es2020, es2022, esnext, node16, nodenext, preserve
#9 7.371 default: undefined
#9 7.371 
#9 7.371 --lib
#9 7.371 Specify a set of bundled library declaration files that describe the target runtime environment.
#9 7.371 one or more: es5, es6/es2015, es7/es2016, es2017, es2018, es2019, es2020, es2021, es2022, es2023, es2024, esnext, dom, dom.iterable, dom.asynciterable, webworker, webworker.importscripts, webworker.iterable, webworker.asynciterable, scripthost, es2015.core, es2015.collection, es2015.generator, es2015.iterable, es2015.promise, es2015.proxy, es2015.reflect, es2015.symbol, es2015.symbol.wellknown, es2016.array.include, es2016.intl, es2017.arraybuffer, es2017.date, es2017.object, es2017.sharedmemory, es2017.string, es2017.intl, es2017.typedarrays, es2018.asyncgenerator, es2018.asynciterable/esnext.asynciterable, es2018.intl, es2018.promise, es2018.regexp, es2019.array, es2019.object, es2019.string, es2019.symbol/esnext.symbol, es2019.intl, es2020.bigint/esnext.bigint, es2020.date, es2020.promise, es2020.sharedmemory, es2020.string, es2020.symbol.wellknown, es2020.intl, es2020.number, es2021.promise, es2021.string, es2021.weakref/esnext.weakref, es2021.intl, es2022.array, es2022.error, es2022.intl, es2022.object, es2022.string, es2022.regexp, es2023.array, es2023.collection, es2023.intl, es2024.arraybuffer, es2024.collection, es2024.object/esnext.object, es2024.promise/esnext.promise, es2024.regexp/esnext.regexp, es2024.sharedmemory, es2024.string/esnext.string, esnext.array, esnext.collection, esnext.intl, esnext.disposable, esnext.decorators, esnext.iterator, decorators, decorators.legacy
#9 7.371 default: undefined
#9 7.372 
#9 7.372 --allowJs
#9 7.372 Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files.
#9 7.372 type: boolean
#9 7.372 default: false
#9 7.372 
#9 7.372 --checkJs
#9 7.372 Enable error reporting in type-checked JavaScript files.
#9 7.372 type: boolean
#9 7.372 default: false
#9 7.372 
#9 7.372 --jsx
#9 7.372 Specify what JSX code is generated.
#9 7.372 one of: preserve, react, react-native, react-jsx, react-jsxdev
#9 7.372 default: undefined
#9 7.372 
#9 7.372 --outFile
#9 7.372 Specify a file that bundles all outputs into one JavaScript file. If 'declaration' is true, also designates a file that bundles all .d.ts output.
#9 7.372 
#9 7.372 --outDir
#9 7.372 Specify an output folder for all emitted files.
#9 7.372 
#9 7.372 --removeComments
#9 7.372 Disable emitting comments.
#9 7.372 type: boolean
#9 7.372 default: false
#9 7.372 
#9 7.372 --strict
#9 7.372 Enable all strict type-checking options.
#9 7.372 type: boolean
#9 7.372 default: false
#9 7.372 
#9 7.372 --types
#9 7.372 Specify type package names to be included without being referenced in a source file.
#9 7.372 
#9 7.372 --esModuleInterop
#9 7.372 Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility.
#9 7.372 type: boolean
#9 7.372 default: false
#9 7.372 
#9 7.372 You can learn about all of the compiler options at https://aka.ms/tsc
#9 7.372 
#9 7.401 npm error code 1
#9 7.401 npm error path /app
#9 7.401 npm error command failed
#9 7.401 npm error command sh -c npm run build
#9 7.403 npm notice
#9 7.403 npm notice New major version of npm available! 10.8.2 -> 11.4.0
#9 7.403 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.0
#9 7.403 npm notice To update run: npm install -g npm@11.4.0
#9 7.403 npm notice
#9 7.404 npm error A complete log of this run can be found in: /root/.npm/_logs/2025-05-17T04_42_25_177Z-debug-0.log
#9 ERROR: process "/bin/sh -c npm ci" did not complete successfully: exit code: 1
------
 > [4/8] RUN npm ci:
7.401 npm error code 1
7.401 npm error path /app
7.401 npm error command failed
7.401 npm error command sh -c npm run build
7.403 npm notice
7.403 npm notice New major version of npm available! 10.8.2 -> 11.4.0
7.403 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.0
7.403 npm notice To update run: npm install -g npm@11.4.0
7.403 npm notice
7.404 npm error A complete log of this run can be found in: /root/.npm/_logs/2025-05-17T04_42_25_177Z-debug-0.log
------
Dockerfile:9
--------------------
   7 |     
   8 |     # Install dependencies
   9 | >>> RUN npm ci
  10 |     
  11 |     # Copy source files
--------------------
error: failed to solve: process "/bin/sh -c npm ci" did not complete successfully: exit code: 1